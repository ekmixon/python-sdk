#!/usr/bin/env python
"""Examples of how to use the redteam SDK"""


import sys
import traceback

sys.path.append('..')
from redteam import redteam

__author__ = 'Jason Callaway'
__email__ = 'jasoncallaway@fedoraproject.org'
__license__ = 'GNU Public License v2'

# Initialize our redteam SDK
r = redteam.RedTeam()
edb = r.EDB
trello = r.RedTeamTrello

# Normally this would be a link to the Ansible playbook for your reproducer
test_system = 'RHEL 7.0, no patches'

try:
    # We've created this csv file by using the ELEM tool. To make your own:
    # $ sudo su -
    # # virtualenv elem
    # # source elem/bin/activate
    # # pip install elem
    # # elem refresh --sslverify False
    # # elem assess --sslverify False > rhel7_exploits.csv

    # parse_exploits returns a dict hashed on the EDB IDs
    exploits = trello.parse_exploits('rhel7_exploits.csv')

    # Now we're going to iterate over those exploits and create Trello
    # cards for any that don't already exist.
    counter = 0
    for edb_id in exploits.keys():
        title = ''
        exploit = exploits[edb_id]

        # Exploits found by ELEM are either 'mapped' or 'curated', which is
        # indiciated in the `elem assess` output by the number of fields
        # returned. Two fields indicates a mapped, but untested exploit, more
        # means that it's been curated. The SDK figures that out for you, so
        # all you need to do is check for a key named 'curated'.
        if exploit.get('curated'):
            # First, we deal with curated exploits, they go on a different
            # Trello list and have a different card description.
            # The title doesn't come back from `elem assess`, but the SDK will
            # map it for you by EDB ID
            title = edb.get_title(edb_id)
            # Now we see if the card already exists
            list_id = trello.get_curated_list_id()
            card_exists = trello.get_card_id(title, list_id=list_id)
            if card_exists:
                # If it does, do nothing
                continue
            # If it doesn't, first we create the card description
            exploit['test_system'] = test_system
            exploit['edb_url'] = edb.get_url(edb_id)
            description = trello.render_description('curated', exploit)
        else:
            # Now we deal with new mapped exploits that have not yet been
            # curated
            title = edb.get_title(exploit['edb_id'])
            list_id = trello.get_mapped_list_id()
            # No need to specify list_id, mapped is default
            card_exists = trello.get_card_id(title)
            if card_exists:
                # If the card already exists, do nothing
                continue
            # If the card doesn't exist, then render the card description
            exploit['test_system'] = test_system
            exploit['edb_url'] = edb.get_url(edb_id)
            description = trello.render_description('mapped', exploit)
        # Then we create the card
        trello.add_card(list_id, title, description)
        counter += 1
        # So that you don't wonder if anything's happening, we print a counter
        # indicating how many new cards have been made, and that card's title
        print(f'created card {counter} {title}')

except Exception as e:
    print(e)
    traceback.print_exc()
